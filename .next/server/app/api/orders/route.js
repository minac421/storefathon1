(()=>{var e={};e.id=9789,e.ids=[9789],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},31098:(e,r,t)=>{"use strict";t.d(r,{A:()=>a});var o=t(56037),n=t.n(o);let s=new o.Schema({orderNumber:{type:String,required:!0,unique:!0},customer:{name:{type:String,required:!0},email:{type:String,required:!0},phone:{type:String,required:!0},address:{type:String,required:!0},city:{type:String,required:!0},notes:{type:String},paymentMethod:{type:String,required:!1}},items:[{id:{type:String,required:!0},name:{type:String,required:!0},price:{type:Number,required:!0},icon:{type:String,required:!0},quantity:{type:Number,required:!0,min:1},category:{type:String,required:!0,enum:["resources","bots","castle","events","packages"]}}],totalPrice:{type:Number,required:!0},status:{type:String,required:!0,enum:["pending","processing","completed","canceled"],default:"pending"},images:{coordImageUrl:{type:String},nameImageUrl:{type:String}}},{timestamps:!0}),a=n().models.Order||n().model("Order",s)},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},56037:e=>{"use strict";e.exports=require("mongoose")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},70175:(e,r,t)=>{"use strict";t.r(r),t.d(r,{patchFetch:()=>S,routeModule:()=>m,serverHooks:()=>h,workAsyncStorage:()=>g,workUnitAsyncStorage:()=>y});var o={};t.r(o),t.d(o,{GET:()=>l,POST:()=>d,PUT:()=>p});var n=t(96559),s=t(48088),a=t(37719),i=t(32190),c=t(88839),u=t(31098);async function l(e){try{await (0,c.A)();let r=new URL(e.url),t=r.searchParams.get("status"),o=r.searchParams.get("sortBy")||"createdAt",n=r.searchParams.get("sortOrder")||"desc",s=r.searchParams.get("limit")?parseInt(r.searchParams.get("limit")):100,a=r.searchParams.get("page")?parseInt(r.searchParams.get("page")):1,l={};t&&(l.status=t);let d={};d[o]="asc"===n?1:-1;let p=await u.A.countDocuments(l),m=(await u.A.find(l).sort(d).skip((a-1)*s).limit(s)).map(e=>{let r=e.toObject();return{id:r._id.toString(),orderNumber:r.orderNumber,customer:r.customer,items:r.items,totalPrice:r.totalPrice,status:r.status,createdAt:r.createdAt,updatedAt:r.updatedAt}});return new i.NextResponse(JSON.stringify({orders:m,pagination:{total:p,page:a,limit:s,pages:Math.ceil(p/s)}}),{headers:{"Content-Type":"application/json; charset=utf-8"}})}catch(e){return console.error("خطأ في جلب الطلبات:",e),new i.NextResponse(JSON.stringify({error:"حدث خطأ أثناء جلب الطلبات"}),{status:500,headers:{"Content-Type":"application/json; charset=utf-8"}})}}async function d(e){try{await (0,c.A)();let r=await e.json(),t=new Date,o=`${t.getFullYear()}${String(t.getMonth()+1).padStart(2,"0")}${String(t.getDate()).padStart(2,"0")}`,n=Math.floor(1e3+9e3*Math.random()).toString(),s=`ORD-${o}-${n}`,a=await u.A.create({...r,orderNumber:s,status:"pending"});return new i.NextResponse(JSON.stringify({id:a._id.toString(),orderNumber:a.orderNumber,success:!0}),{headers:{"Content-Type":"application/json; charset=utf-8"}})}catch(e){return console.error("خطأ في إنشاء طلب جديد:",e),new i.NextResponse(JSON.stringify({error:"حدث خطأ أثناء إنشاء طلب جديد"}),{status:500,headers:{"Content-Type":"application/json; charset=utf-8"}})}}async function p(e){try{await (0,c.A)();let{id:r,status:t}=await e.json();if(!r)return new i.NextResponse(JSON.stringify({error:"معرف الطلب مطلوب"}),{status:400,headers:{"Content-Type":"application/json; charset=utf-8"}});return await u.A.findByIdAndUpdate(r,{status:t,updatedAt:new Date}),new i.NextResponse(JSON.stringify({success:!0}),{headers:{"Content-Type":"application/json; charset=utf-8"}})}catch(e){return console.error("خطأ في تحديث الطلب:",e),new i.NextResponse(JSON.stringify({error:"حدث خطأ أثناء تحديث الطلب"}),{status:500,headers:{"Content-Type":"application/json; charset=utf-8"}})}}let m=new n.AppRouteRouteModule({definition:{kind:s.RouteKind.APP_ROUTE,page:"/api/orders/route",pathname:"/api/orders",filename:"route",bundlePath:"app/api/orders/route"},resolvedPagePath:"C:\\Users\\minaa\\CascadeProjects\\conquerors-website\\src\\app\\api\\orders\\route.ts",nextConfigOutput:"",userland:o}),{workAsyncStorage:g,workUnitAsyncStorage:y,serverHooks:h}=m;function S(){return(0,a.patchFetch)({workAsyncStorage:g,workUnitAsyncStorage:y})}},78335:()=>{},88839:(e,r,t)=>{"use strict";t.d(r,{A:()=>u});var o=t(56037),n=t.n(o);let s=process.env.MONGODB_URI||"mongodb+srv://minaadelc4:cHjkStQnKuh91sNt@storefathone.a42qbk5.mongodb.net/storefathon?retryWrites=true&w=majority&appName=storefathone",a={connected:1,connecting:2},i=["منفصل","متصل","جاري الاتصال","جاري الانفصال"];if(!s)throw Error("يرجى تحديد رابط MONGODB_URI في ملف .env.local");let c=global.mongoose;c||(c=global.mongoose={conn:null,promise:null,errorCount:0,lastErrorTime:null});let u=async function(){if(c.conn)try{let e=c.conn.readyState;if(e===a.connected)return c.conn;console.log(`⚠️ حالة الاتصال بقاعدة البيانات غير صالحة (readyState=${e})، إعادة الاتصال...`),c.conn=null,c.promise=null}catch(e){console.error("❌ خطأ عند فحص حالة الاتصال الحالي:",e),c.conn=null,c.promise=null}if(c.lastErrorTime&&Date.now()-c.lastErrorTime>6e4&&(console.log("\uD83D\uDD04 إعادة ضبط عداد الأخطاء بعد مرور دقيقة"),c.errorCount=0,c.lastErrorTime=null),c.errorCount>5){let e=c.lastErrorTime?Math.floor((Date.now()-c.lastErrorTime)/1e3):0;if(console.error(`⛔ تجاوز الحد الأقصى لمحاولات الاتصال (${c.errorCount}). آخر محاولة منذ ${e} ثانية.`),e>60)console.log("\uD83D\uDD04 إعادة ضبط عداد محاولات الاتصال بعد فترة انتظار"),c.errorCount=0;else throw Error(`تجاوز الحد الأقصى لمحاولات الاتصال بقاعدة البيانات. حاول مرة أخرى لاحقًا (${Math.max(0,60-e)} ثانية متبقية)`)}c.promise?console.log("♻️ استخدام وعد اتصال موجود"):(console.log("\uD83D\uDD0D محاولة الاتصال بـ:",s.replace(/(mongodb\+srv:\/\/[^:]+):[^@]+@/,"$1:****@")),c.promise=n().connect(s,{bufferCommands:!0,serverSelectionTimeoutMS:2e4,connectTimeoutMS:2e4,socketTimeoutMS:6e4,family:4,maxPoolSize:10,retryWrites:!0,retryReads:!0}).then(e=>{let r=e.connection;return console.log(`🌿 تم الاتصال بقاعدة البيانات MongoDB بنجاح! (${r.name})`),r.on("error",e=>{console.error("❌ خطأ في اتصال قاعدة البيانات خلال التشغيل:",e)}),r.on("disconnected",()=>{console.warn("⚠️ انقطع الاتصال بقاعدة البيانات"),c.conn=null}),c.errorCount=0,c.lastErrorTime=null,r}).catch(e=>{throw c.errorCount++,c.lastErrorTime=Date.now(),console.error("❌ خطأ في الاتصال بقاعدة البيانات MongoDB:",e.message),"MongoServerSelectionError"===e.name&&(console.error("⚠️ خطأ اختيار السيرفر: تأكد من أن عنوان IP الخاص بك مسموح به في إعدادات الأمان لـ MongoDB Atlas"),console.error("\uD83D\uDCA1 اقتراح: اضبط Network Access في MongoDB Atlas للسماح لـ 0.0.0.0/0 للاختبار")),e.message.includes("Authentication failed")&&console.error("\uD83D\uDD11 فشل المصادقة: تأكد من صحة اسم المستخدم وكلمة المرور"),e.message.includes("getaddrinfo")&&console.error("\uD83C\uDF10 خطأ DNS: تأكد من اسم النطاق الصحيح وتوفر اتصال الإنترنت"),c.promise=null,e}));try{c.conn=await c.promise}catch(e){throw c.promise=null,e}let e=c.conn.readyState;if(e!==a.connected){console.warn(`⚠️ حالة الاتصال غير متوقعة: ${e}`);let r=i[e]||"غير معروفة";if(console.warn(`📊 حالة الاتصال: ${r}`),e===a.connecting){console.log("⏳ جاري الاتصال، الانتظار..."),await new Promise(e=>setTimeout(e,1e3));let e=c.conn.readyState;if(e===a.connected)console.log("✅ تم الاتصال بنجاح بعد الانتظار");else{let r=i[e]||"غير معروفة";console.warn(`⚠️ لا يزال الاتصال في حالة غير متوقعة: ${e} (${r})`)}}}return c.conn}},96487:()=>{}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),o=r.X(0,[7719,580],()=>t(70175));module.exports=o})();