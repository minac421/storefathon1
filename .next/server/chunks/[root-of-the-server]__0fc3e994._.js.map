{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 188, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/minaa/CascadeProjects/conquerors-website/src/utils/mockData.ts"],"sourcesContent":["// نموذج بيانات رسائل الدردشة\r\nexport interface ChatMessage {\r\n  id: string;\r\n  sender: string;\r\n  senderAvatarId: number;\r\n  message: string;\r\n  timestamp: string;\r\n  interaction?: {\r\n    likes: string[];\r\n    isLiked?: boolean;\r\n  };\r\n}\r\n\r\n// إنشاء بيانات وهمية للرسائل الأولية\r\nexport function createMockMessages(): ChatMessage[] {\r\n  return [\r\n    { \r\n      id: '1', \r\n      sender: 'فاطمة', \r\n      senderAvatarId: 3, \r\n      message: 'مرحباً بالجميع في دردشة الفاتحون! هل يمكنني الحصول على نصائح لتطوير قلعتي؟', \r\n      timestamp: '2025-05-16T01:00:00.000Z',\r\n      interaction: {\r\n        likes: [],\r\n        isLiked: false\r\n      }\r\n    },\r\n    { \r\n      id: '2', \r\n      sender: 'عمر', \r\n      senderAvatarId: 1, \r\n      message: 'أهلاً فاطمة! أنصحك بالتركيز على تطوير الدفاعات أولاً وزيادة إنتاج الموارد', \r\n      timestamp: '2025-05-16T01:01:30.000Z',\r\n      interaction: {\r\n        likes: [],\r\n        isLiked: false\r\n      }\r\n    },\r\n    { \r\n      id: '3', \r\n      sender: 'خالد', \r\n      senderAvatarId: 5, \r\n      message: 'البوتات الذكية للمزارع ستساعدك كثيراً في توفير الموارد والوقت', \r\n      timestamp: '2025-05-16T01:03:00.000Z',\r\n      interaction: {\r\n        likes: [],\r\n        isLiked: false\r\n      }\r\n    },\r\n  ];\r\n}\r\n\r\n// نموذج بيانات المستخدمين المتصلين\r\nexport interface OnlineUser {\r\n  name: string;\r\n  avatarId: number;\r\n}\r\n\r\n// إنشاء بيانات وهمية للمستخدمين المتصلين\r\nexport function createMockOnlineUsers(): OnlineUser[] {\r\n  return [\r\n    { name: 'عمر', avatarId: 1 },\r\n    { name: 'خالد', avatarId: 5 },\r\n    { name: 'فاطمة', avatarId: 3 },\r\n    { name: 'محمد', avatarId: 2 },\r\n    { name: 'سارة', avatarId: 6 },\r\n    { name: 'أحمد', avatarId: 8 },\r\n    { name: 'نورا', avatarId: 4 }\r\n  ];\r\n} "],"names":[],"mappings":"AAAA,6BAA6B;;;;;AActB,SAAS;IACd,OAAO;QACL;YACE,IAAI;YACJ,QAAQ;YACR,gBAAgB;YAChB,SAAS;YACT,WAAW;YACX,aAAa;gBACX,OAAO,EAAE;gBACT,SAAS;YACX;QACF;QACA;YACE,IAAI;YACJ,QAAQ;YACR,gBAAgB;YAChB,SAAS;YACT,WAAW;YACX,aAAa;gBACX,OAAO,EAAE;gBACT,SAAS;YACX;QACF;QACA;YACE,IAAI;YACJ,QAAQ;YACR,gBAAgB;YAChB,SAAS;YACT,WAAW;YACX,aAAa;gBACX,OAAO,EAAE;gBACT,SAAS;YACX;QACF;KACD;AACH;AASO,SAAS;IACd,OAAO;QACL;YAAE,MAAM;YAAO,UAAU;QAAE;QAC3B;YAAE,MAAM;YAAQ,UAAU;QAAE;QAC5B;YAAE,MAAM;YAAS,UAAU;QAAE;QAC7B;YAAE,MAAM;YAAQ,UAAU;QAAE;QAC5B;YAAE,MAAM;YAAQ,UAAU;QAAE;QAC5B;YAAE,MAAM;YAAQ,UAAU;QAAE;QAC5B;YAAE,MAAM;YAAQ,UAAU;QAAE;KAC7B;AACH","debugId":null}},
    {"offset": {"line": 268, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/minaa/CascadeProjects/conquerors-website/src/utils/chatStore.js"],"sourcesContent":["import { createMockOnlineUsers } from '@/utils/mockData';\r\n\r\n// مخزن مشترك للدردشة - يستخدم على جانب الخادم والعميل\r\nexport const chatStore = {\r\n  // مصفوفة الرسائل\r\n  messages: [],\r\n  \r\n  // معرف آخر رسالة\r\n  lastMessageId: 1,\r\n  \r\n  // الحد الأقصى لعدد الرسائل المخزنة\r\n  maxMessages: 100,\r\n  \r\n  // إضافة رسالة جديدة\r\n  addMessage(message) {\r\n    // إنشاء معرف جديد للرسالة\r\n    const messageId = `server-${this.lastMessageId++}`;\r\n    \r\n    // إنشاء نسخة من الرسالة مع المعرف الجديد\r\n    const savedMessage = {\r\n      id: messageId,\r\n      ...message,\r\n      // ضمان وجود وقت وتفاعل\r\n      timestamp: message.timestamp || new Date().toISOString(),\r\n      interaction: message.interaction || {\r\n        likes: [],\r\n        isLiked: false\r\n      }\r\n    };\r\n    \r\n    // إضافة الرسالة إلى المصفوفة\r\n    this.messages.push(savedMessage);\r\n    \r\n    // التحقق من عدم تجاوز الحد الأقصى\r\n    if (this.messages.length > this.maxMessages) {\r\n      // إزالة أقدم رسالة\r\n      this.messages.shift();\r\n    }\r\n    \r\n    return savedMessage;\r\n  },\r\n  \r\n  // الحصول على الرسائل مع اختيار الحد الأقصى\r\n  getMessages(limit = 20) {\r\n    // ضمان أن الحد الأقصى عدد صحيح\r\n    const count = Math.min(parseInt(limit) || 20, this.messages.length);\r\n    \r\n    // إذا لم تكن هناك رسائل، عودة مصفوفة فارغة\r\n    if (this.messages.length === 0) {\r\n      return this.createInitialMessages();\r\n    }\r\n    \r\n    // إعادة آخر count رسائل\r\n    return this.messages.slice(-count);\r\n  },\r\n  \r\n  // تحديث تفاعل الرسالة\r\n  updateMessageInteraction(messageId, userId, isLiked) {\r\n    // البحث عن الرسالة\r\n    const message = this.messages.find(msg => msg.id === messageId);\r\n    \r\n    if (!message) {\r\n      return null;\r\n    }\r\n    \r\n    // تحديث التفاعل\r\n    if (isLiked) {\r\n      // إضافة المستخدم إلى قائمة الإعجابات إذا لم يكن موجوداً\r\n      if (!message.interaction.likes.includes(userId)) {\r\n        message.interaction.likes.push(userId);\r\n      }\r\n    } else {\r\n      // إزالة المستخدم من قائمة الإعجابات\r\n      message.interaction.likes = message.interaction.likes.filter(id => id !== userId);\r\n    }\r\n    \r\n    return message;\r\n  },\r\n  \r\n  // إنشاء رسائل أولية إذا لم تكن هناك رسائل\r\n  createInitialMessages() {\r\n    // استخدام بيانات المستخدمين الوهمية لإنشاء رسائل أولية\r\n    const mockUsers = createMockOnlineUsers();\r\n    \r\n    const initialMessages = [\r\n      {\r\n        message: 'مرحباً بالجميع في دردشة الفاتحون! هل يمكنني الحصول على نصائح لتطوير قلعتي؟',\r\n        sender: mockUsers[0].name,\r\n        senderAvatarId: mockUsers[0].avatarId,\r\n        timestamp: new Date(Date.now() - 3600000).toISOString() // قبل ساعة\r\n      },\r\n      {\r\n        message: 'أهلاً! أنصحك بالتركيز على تطوير الدفاعات أولاً وزيادة إنتاج الموارد',\r\n        sender: mockUsers[1].name,\r\n        senderAvatarId: mockUsers[1].avatarId,\r\n        timestamp: new Date(Date.now() - 3300000).toISOString() // قبل 55 دقيقة\r\n      },\r\n      {\r\n        message: 'البوتات الذكية للمزارع ستساعدك كثيراً في توفير الموارد والوقت',\r\n        sender: mockUsers[2].name,\r\n        senderAvatarId: mockUsers[2].avatarId,\r\n        timestamp: new Date(Date.now() - 3000000).toISOString() // قبل 50 دقيقة\r\n      },\r\n      {\r\n        message: 'كما يجب عليك الانضمام لتحالف قوي للحصول على المساعدة والحماية',\r\n        sender: mockUsers[3].name,\r\n        senderAvatarId: mockUsers[3].avatarId,\r\n        timestamp: new Date(Date.now() - 2700000).toISOString() // قبل 45 دقيقة\r\n      },\r\n      {\r\n        message: 'هل جربت استراتيجية الهجوم المتعدد المراحل؟ فعالة جداً!',\r\n        sender: mockUsers[0].name,\r\n        senderAvatarId: mockUsers[0].avatarId,\r\n        timestamp: new Date(Date.now() - 1800000).toISOString() // قبل 30 دقيقة\r\n      }\r\n    ];\r\n    \r\n    // حفظ الرسائل المبدئية\r\n    initialMessages.forEach(msg => this.addMessage(msg));\r\n    \r\n    return this.messages;\r\n  }\r\n};\r\n\r\n// إنشاء رسائل أولية عند بدء التشغيل\r\nif (chatStore.messages.length === 0) {\r\n  chatStore.createInitialMessages();\r\n}\r\n\r\nexport default chatStore; "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 387, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/minaa/CascadeProjects/conquerors-website/src/app/api/socket/route.js"],"sourcesContent":["import { Server as ServerIO } from \"socket.io\";\nimport { createMockOnlineUsers } from '@/utils/mockData';\nimport { chatStore } from '@/utils/chatStore';\n\nexport const dynamic = 'force-dynamic';\nexport const runtime = 'nodejs';\n\n// تخزين قائمة المستخدمين المتصلين\nconst onlineUsers = createMockOnlineUsers();\n// خريطة لتخزين بيانات المستخدم مرتبطة بمعرف الاتصال\nconst connectedUsers = new Map();\n\nexport async function GET(req) {\n  const res = new Response();\n  \n  if (!res.socket?.server?.io) {\n    try {\n      const path = \"/api/socket\";\n      const httpServer = res.socket.server;\n      \n      // إنشاء خادم Socket.IO مع خيارات محسنة\n      const io = new ServerIO(httpServer, {\n        path,\n        addTrailingSlash: false,\n        cors: {\n          origin: \"*\",\n          methods: [\"GET\", \"POST\"]\n        },\n        // تعطيل WebSocket واستخدام polling فقط لحل مشكلة الأخطاء\n        transports: ['polling'],\n        pingTimeout: 60000,\n        pingInterval: 25000,\n        connectTimeout: 30000,\n        // ضبط أقصى محاولات إعادة الاتصال\n        reconnectionAttempts: 5,\n        // تقليل الطلبات والبيانات المرسلة\n        perMessageDeflate: false,\n        maxHttpBufferSize: 1e6 // 1 MB\n      });\n\n      console.log(\"Socket.IO server initialized with polling transport\");\n      \n      io.engine.on(\"connection_error\", (err) => {\n        console.log(`Socket.IO connection error: ${err.message}, ${err.code}`);\n      });\n      \n      io.on(\"connection\", (socket) => {\n        console.log(`Socket ${socket.id} connected`);\n        \n        // انضمام إلى غرفة الدردشة العامة افتراضيًا\n        socket.join(\"global\");\n        \n        // إرسال قائمة المستخدمين المتصلين الحالية\n        socket.emit(\"online-users-update\", onlineUsers);\n        \n        // إرسال آخر 20 رسالة عند الاتصال\n        socket.emit(\"initial-messages\", chatStore.getMessages(20));\n        \n        // استقبال وإرسال الرسائل للغرف المحددة\n        socket.on(\"send-message\", ({ room, message, sender, senderAvatarId }) => {\n          // إنشاء رسالة جديدة\n          const newMessage = {\n            message,\n            sender,\n            senderAvatarId,\n            timestamp: new Date().toISOString(),\n            interaction: {\n              likes: [],\n              isLiked: false\n            }\n          };\n          \n          // حفظ الرسالة في المخزن المشترك\n          const savedMessage = chatStore.addMessage(newMessage);\n          \n          // إرسال الرسالة للغرفة\n          socket.to(room).emit(\"new-message\", savedMessage);\n          // إرسال تأكيد للمرسل\n          socket.emit(\"message-confirmed\", savedMessage);\n        });\n        \n        // استقبال معلومات المستخدم عند الاتصال\n        socket.on(\"user-connected\", (user) => {\n          // حفظ معلومات المستخدم\n          connectedUsers.set(socket.id, user);\n          \n          // التحقق من وجود المستخدم في القائمة\n          const existingUserIndex = onlineUsers.findIndex(u => u.name === user.name);\n          \n          if (existingUserIndex === -1) {\n            // إضافة المستخدم إلى القائمة\n            onlineUsers.push(user);\n          }\n          \n          // إرسال قائمة المستخدمين المحدثة لجميع المستخدمين\n          io.to(\"global\").emit(\"online-users-update\", onlineUsers);\n        });\n        \n        // الانضمام إلى غرف الدردشة المحددة\n        socket.on(\"join-room\", (room) => {\n          socket.join(room);\n          socket.emit(\"room-joined\", room);\n          console.log(`Socket ${socket.id} joined room: ${room}`);\n        });\n        \n        // إشعارات الكتابة\n        socket.on(\"user-typing\", ({ room, username, isTyping }) => {\n          socket.to(room).emit(\"user-typing-update\", { username, isTyping });\n        });\n\n        // معالجة قطع الاتصال\n        socket.on(\"disconnect\", (reason) => {\n          console.log(`Socket ${socket.id} disconnected, reason: ${reason}`);\n          \n          // الحصول على معلومات المستخدم الذي تم قطع اتصاله\n          const user = connectedUsers.get(socket.id);\n          \n          // إزالة المستخدم من الخريطة\n          connectedUsers.delete(socket.id);\n          \n          // إزالة المستخدم من القائمة إذا لم يعد أي اتصال له\n          if (user) {\n            // عد عدد اتصالات المستخدم المتبقية\n            let remainingConnections = 0;\n            for (let [_, u] of connectedUsers.entries()) {\n              if (u.name === user.name) {\n                remainingConnections++;\n              }\n            }\n            \n            // إذا لم يعد هناك اتصالات، قم بإزالة المستخدم من القائمة\n            if (remainingConnections === 0) {\n              const userIndex = onlineUsers.findIndex(u => u.name === user.name);\n              if (userIndex !== -1) {\n                onlineUsers.splice(userIndex, 1);\n                io.to(\"global\").emit(\"online-users-update\", onlineUsers);\n              }\n            }\n          }\n        });\n        \n        // إعادة اتصال لمعالجة حالات قطع الاتصال غير المتوقعة\n        socket.on(\"reconnect\", (attemptNumber) => {\n          console.log(`Socket ${socket.id} reconnected after ${attemptNumber} attempts`);\n          \n          // إعادة الانضمام إلى الغرفة العامة\n          socket.join(\"global\");\n          \n          // إرسال قائمة المستخدمين المتصلين\n          socket.emit(\"online-users-update\", onlineUsers);\n        });\n        \n        // معالجة أخطاء Socket.IO\n        socket.on(\"error\", (error) => {\n          console.error(`Socket ${socket.id} error:`, error);\n        });\n      });\n      \n      res.socket.server.io = io;\n      \n    } catch (error) {\n      console.error(\"Socket.IO initialization error:\", error);\n      return new Response(\"فشل في تشغيل خادم Socket.IO: \" + error.message, { status: 500 });\n    }\n  }\n  \n  return new Response(\"تم تشغيل خادم Socket.IO بنجاح\");\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}