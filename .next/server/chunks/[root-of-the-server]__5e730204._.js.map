{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 188, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/minaa/CascadeProjects/conquerors-website/src/utils/mockData.ts"],"sourcesContent":["// نموذج بيانات رسائل الدردشة\r\nexport interface ChatMessage {\r\n  id: string;\r\n  sender: string;\r\n  senderAvatarId: number;\r\n  message: string;\r\n  timestamp: string;\r\n  interaction?: {\r\n    likes: string[];\r\n    isLiked?: boolean;\r\n  };\r\n}\r\n\r\n// إنشاء بيانات وهمية للرسائل الأولية\r\nexport function createMockMessages(): ChatMessage[] {\r\n  return [\r\n    { \r\n      id: '1', \r\n      sender: 'فاطمة', \r\n      senderAvatarId: 3, \r\n      message: 'مرحباً بالجميع في دردشة الفاتحون! هل يمكنني الحصول على نصائح لتطوير قلعتي؟', \r\n      timestamp: '2025-05-16T01:00:00.000Z',\r\n      interaction: {\r\n        likes: [],\r\n        isLiked: false\r\n      }\r\n    },\r\n    { \r\n      id: '2', \r\n      sender: 'عمر', \r\n      senderAvatarId: 1, \r\n      message: 'أهلاً فاطمة! أنصحك بالتركيز على تطوير الدفاعات أولاً وزيادة إنتاج الموارد', \r\n      timestamp: '2025-05-16T01:01:30.000Z',\r\n      interaction: {\r\n        likes: [],\r\n        isLiked: false\r\n      }\r\n    },\r\n    { \r\n      id: '3', \r\n      sender: 'خالد', \r\n      senderAvatarId: 5, \r\n      message: 'البوتات الذكية للمزارع ستساعدك كثيراً في توفير الموارد والوقت', \r\n      timestamp: '2025-05-16T01:03:00.000Z',\r\n      interaction: {\r\n        likes: [],\r\n        isLiked: false\r\n      }\r\n    },\r\n  ];\r\n}\r\n\r\n// نموذج بيانات المستخدمين المتصلين\r\nexport interface OnlineUser {\r\n  name: string;\r\n  avatarId: number;\r\n}\r\n\r\n// إنشاء بيانات وهمية للمستخدمين المتصلين\r\nexport function createMockOnlineUsers(): OnlineUser[] {\r\n  return [\r\n    { name: 'عمر', avatarId: 1 },\r\n    { name: 'خالد', avatarId: 5 },\r\n    { name: 'فاطمة', avatarId: 3 },\r\n    { name: 'محمد', avatarId: 2 },\r\n    { name: 'سارة', avatarId: 6 },\r\n    { name: 'أحمد', avatarId: 8 },\r\n    { name: 'نورا', avatarId: 4 }\r\n  ];\r\n} "],"names":[],"mappings":"AAAA,6BAA6B;;;;;AActB,SAAS;IACd,OAAO;QACL;YACE,IAAI;YACJ,QAAQ;YACR,gBAAgB;YAChB,SAAS;YACT,WAAW;YACX,aAAa;gBACX,OAAO,EAAE;gBACT,SAAS;YACX;QACF;QACA;YACE,IAAI;YACJ,QAAQ;YACR,gBAAgB;YAChB,SAAS;YACT,WAAW;YACX,aAAa;gBACX,OAAO,EAAE;gBACT,SAAS;YACX;QACF;QACA;YACE,IAAI;YACJ,QAAQ;YACR,gBAAgB;YAChB,SAAS;YACT,WAAW;YACX,aAAa;gBACX,OAAO,EAAE;gBACT,SAAS;YACX;QACF;KACD;AACH;AASO,SAAS;IACd,OAAO;QACL;YAAE,MAAM;YAAO,UAAU;QAAE;QAC3B;YAAE,MAAM;YAAQ,UAAU;QAAE;QAC5B;YAAE,MAAM;YAAS,UAAU;QAAE;QAC7B;YAAE,MAAM;YAAQ,UAAU;QAAE;QAC5B;YAAE,MAAM;YAAQ,UAAU;QAAE;QAC5B;YAAE,MAAM;YAAQ,UAAU;QAAE;QAC5B;YAAE,MAAM;YAAQ,UAAU;QAAE;KAC7B;AACH","debugId":null}},
    {"offset": {"line": 268, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/minaa/CascadeProjects/conquerors-website/src/app/api/socket/route.js"],"sourcesContent":["import { Server as ServerIO } from \"socket.io\";\nimport { createMockOnlineUsers } from '@/utils/mockData';\n\nexport const dynamic = 'force-dynamic';\nexport const runtime = 'nodejs';\n\n// تخزين قائمة المستخدمين المتصلين\nconst onlineUsers = createMockOnlineUsers();\n// خريطة لتخزين بيانات المستخدم مرتبطة بمعرف الاتصال\nconst connectedUsers = new Map();\n\nexport async function GET(req) {\n  const res = new Response();\n  \n  if (!res.socket?.server?.io) {\n    const path = \"/api/socket\";\n    const httpServer = res.socket.server;\n    \n    const io = new ServerIO(httpServer, {\n      path: path,\n      addTrailingSlash: false,\n    });\n\n    io.on(\"connection\", (socket) => {\n      console.log(`Socket ${socket.id} connected`);\n      \n      // انضمام إلى غرفة الدردشة العامة افتراضيًا\n      socket.join(\"global\");\n      \n      // إرسال قائمة المستخدمين المتصلين الحالية\n      socket.emit(\"online-users-update\", onlineUsers);\n      \n      // استقبال وإرسال الرسائل للغرف المحددة\n      socket.on(\"send-message\", ({ room, message, sender, senderAvatarId }) => {\n        io.to(room).emit(\"new-message\", {\n          id: Date.now().toString(),\n          message,\n          sender,\n          senderAvatarId,\n          timestamp: new Date().toISOString(),\n          interaction: {\n            likes: [],\n            isLiked: false\n          }\n        });\n      });\n      \n      // استقبال معلومات المستخدم عند الاتصال\n      socket.on(\"user-connected\", (user) => {\n        // حفظ معلومات المستخدم\n        connectedUsers.set(socket.id, user);\n        \n        // التحقق من وجود المستخدم في القائمة\n        const existingUserIndex = onlineUsers.findIndex(u => u.name === user.name);\n        \n        if (existingUserIndex === -1) {\n          // إضافة المستخدم إلى القائمة\n          onlineUsers.push(user);\n        }\n        \n        // إرسال قائمة المستخدمين المحدثة لجميع المستخدمين\n        io.to(\"global\").emit(\"online-users-update\", onlineUsers);\n      });\n      \n      // الانضمام إلى غرف الدردشة المحددة\n      socket.on(\"join-room\", (room) => {\n        socket.join(room);\n        socket.emit(\"room-joined\", room);\n        console.log(`Socket ${socket.id} joined room: ${room}`);\n      });\n      \n      // إشعارات الكتابة\n      socket.on(\"user-typing\", ({ room, username, isTyping }) => {\n        socket.to(room).emit(\"user-typing-update\", { username, isTyping });\n      });\n\n      // معالجة قطع الاتصال\n      socket.on(\"disconnect\", () => {\n        console.log(`Socket ${socket.id} disconnected`);\n        \n        // الحصول على معلومات المستخدم الذي تم قطع اتصاله\n        const user = connectedUsers.get(socket.id);\n        \n        // إزالة المستخدم من الخريطة\n        connectedUsers.delete(socket.id);\n        \n        // إزالة المستخدم من القائمة إذا لم يعد أي اتصال له\n        if (user) {\n          // عد عدد اتصالات المستخدم المتبقية\n          let remainingConnections = 0;\n          for (let [_, u] of connectedUsers.entries()) {\n            if (u.name === user.name) {\n              remainingConnections++;\n            }\n          }\n          \n          // إذا لم يعد هناك اتصالات، قم بإزالة المستخدم من القائمة\n          if (remainingConnections === 0) {\n            const userIndex = onlineUsers.findIndex(u => u.name === user.name);\n            if (userIndex !== -1) {\n              onlineUsers.splice(userIndex, 1);\n              io.to(\"global\").emit(\"online-users-update\", onlineUsers);\n            }\n          }\n        }\n      });\n    });\n    \n    res.socket.server.io = io;\n  }\n  \n  return new Response(\"تم تشغيل خادم Socket.IO بنجاح\");\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}